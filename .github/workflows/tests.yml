name: Tests

on:
  push:
    branches:    
      - 'master'

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    # BUILD THE DOCKER COMPOSE STACK
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.9'
          cache: 'pip'
      - name: Set environment variables for the docker compose stack
        run: |
          export MAIL_USERNAME=${{ secrets.MAIL_USERNAME }}
          export MAIL_PASSWORD=${{ secrets.MAIL_PASSWORD }}
          export MAIL_FROM=${{ secrets.MAIL_FROM }}
          export MAIL_PORT=${{ secrets.MAIL_PORT }}
          export MAIL_SERVER=${{ secrets.MAIL_SERVER }}
          export MAIL_FROM_NAME=${{ secrets.MAIL_FROM_NAME }}
          export MAIL_TLS=${{ secrets.MAIL_TLS }}
          export MAIL_SSL=${{ secrets.MAIL_SSL }}
          export BASE_URL_FRONTEND=${{ secrets.BASE_URL_FRONTEND }}
          export BASE_URL_API=${{ secrets.BASE_URL_API }}
          export DATABASE_URL=${{ secrets.DATABASE_URL }}
          export DATABASE_TEST_BACKEND_URL=${{ secrets.DATABASE_TEST_BACKEND_URL }}
          export POSTGRES_USER=${{ secrets.POSTGRES_USER }}
          export POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
      - name: Build and run the docker compose stack
        # run: docker-compose -f "docker-compose-test.yml" --env-file .env.test up -d
        run: docker-compose -f "docker-compose-test.yml" up -d

      # BACKEND TESTS
      - name: Perform unit tests
        run: docker exec fastapi python -m pytest -v -m unittest
      - name: Perform api tests
        run: docker exec fastapi python -m pytest -v -m apitest --html=backend-test-report.html --self-contained-html
      - name: Copy backend test report from container to host
        run: | 
          docker cp fastapi:/app/backend-test-report.html .
          find . -iname backend-test-report.html

      # FRONTEND TESTS
      - name: Setup database for UI tests
        run: | 
          docker exec fastapi aerich init -t app.db.TORTOISE_ORM
          docker exec fastapi aerich init-db
          docker exec fastapi aerich upgrade
          docker exec database psql -U postgres -d test -f setup_testdata.sql
      - name: Install test dependencies
        run: |
          pip install -r ./backend/tests/frontend/requirements.txt
          playwright install
      - name: Perform UI tests
        run: pytest ./backend/tests/frontend/ --html=frontend-test-report.html --self-contained-html

      # ARCHIVE TEST REPORTS
      - name: Archive test report
        uses: actions/upload-artifact@v2
        with:
          name: Test reports
          path: |
            ./backend-test-report.html
            ./frontend-test-report.html